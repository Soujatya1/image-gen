import streamlit as st 
from dotenv import load_dotenv
import os
import diffusers
from diffusers import DiffusionPipeline, Lumina2Text2ImgPipeline
import torch
import transformers
import accelerate

load_dotenv()

# Function to generate AI images using OpenAI DALL-E
def generate_images_using_openai(text):
    response = openai.Image.create(prompt=text, n=1, size="512x512")
    image_url = response['data'][0]['url']
    return image_url

# Function to generate AI images using Huggingface Diffusers (Stable Diffusion)
def generate_images_using_huggingface_diffusers(text):
    pipe = StableDiffusionPipeline.from_pretrained("runwayml/stable-diffusion-v1-5", torch_dtype=torch.float16)
    pipe = pipe.to("cuda")
    image = pipe(text).images[0] 
    return image

# Function to generate AI images using Lumina-2
def generate_images_using_lumina2(text):
    pipe = DiffusionPipeline.from_pretrained("Alpha-VLLM/Lumina-Image-2.0", torch_dtype=torch.bfloat16)
    pipe.enable_model_cpu_offload()  # Offload model to CPU if GPU memory is limited
    image = pipe(
        text,
        height=1024,
        width=1024,
        guidance_scale=4.0,
        num_inference_steps=50,
        cfg_trunc_ratio=0.25,
        cfg_normalization=True,
        generator=torch.Generator("cpu").manual_seed(0)
    ).images[0]
    return image

# Streamlit UI
choice = st.sidebar.selectbox("Select your choice", ["Home", "DALL-E", "Huggingface Diffusers", "Lumina-2"])

if choice == "Home":
    st.title("AI Image Generation App")
    with st.expander("About the App"):
        st.write("This app generates AI-based images from text prompts using OpenAI DALL-E, Huggingface Diffusers, and Lumina-2.")

elif choice == "DALL-E":
    st.subheader("Image generation using OpenAI's DALL-E")
    input_prompt = st.text_input("Enter your text prompt")
    if input_prompt:
        if st.button("Generate Image"):
            image_url = generate_images_using_openai(input_prompt)
            st.image(image_url, caption="Generated by DALL-E")

elif choice == "Huggingface Diffusers":
    st.subheader("Image generation using Huggingface Diffusers")
    input_prompt = st.text_input("Enter your text prompt")
    if input_prompt:
        if st.button("Generate Image"):
            st.info("Generating image...")
            image_output = generate_images_using_huggingface_diffusers(input_prompt)
            st.success("Image Generated Successfully")
            st.image(image_output, caption="Generated by Huggingface Diffusers")

elif choice == "Lumina-2":
    st.subheader("Image generation using Lumina-2")
    input_prompt = st.text_input("Enter your text prompt")
    if input_prompt:
        if st.button("Generate Image"):
            st.info("Generating image...")
            image_output = generate_images_using_lumina2(input_prompt)
            st.success("Image Generated Successfully")
            st.image(image_output, caption="Generated by Lumina-2")
