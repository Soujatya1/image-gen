import streamlit as st
from dotenv import load_dotenv
import os
import torch
from transformers import AutoProcessor, AutoModel

load_dotenv()

# Load Lumina-2 Model Once to Avoid Reloading on Every Request
@st.cache_resource
def load_lumina2_model():
    model_id = "Alpha-VLLM/Lumina-Image-2.0"
    processor = AutoProcessor.from_pretrained(model_id)
    model = AutoModel.from_pretrained(model_id, torch_dtype=torch.bfloat16)
    return processor, model

processor, model = load_lumina2_model()

# Function to Generate AI Images Using Lumina-2
def generate_images_using_lumina2(text):
    input_ids = processor(text, return_tensors="pt").input_ids
    output = model.generate(
        input_ids=input_ids,
        height=1024,
        width=1024,
        guidance_scale=4.0,
        num_inference_steps=50
    )
    image = processor.post_process(output)
    return image[0]

# Streamlit UI
choice = st.sidebar.selectbox("Select your choice", ["Home", "Lumina-2"])

if choice == "Home":
    st.title("AI Image Generation App")
    with st.expander("About the App"):
        st.write("This app generates AI-based images from text prompts using Lumina-2.")

elif choice == "Lumina-2":
    st.subheader("Image generation using Lumina-2")
    input_prompt = st.text_input("Enter your text prompt")

    if input_prompt:
        if st.button("Generate Image"):
            st.info("Generating image...")
            image_output = generate_images_using_lumina2(input_prompt)
            st.success("Image Generated Successfully")
            st.image(image_output, caption="Generated by Lumina-2")
